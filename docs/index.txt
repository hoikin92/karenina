.. karenina documentation master file, created by
   sphinx-quickstart on Sun Aug 19 16:20:06 2018.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree`   directive.

Karenina
====================================

Simulation and modeling tools for studying Anna Karenina effects in animal microbiomes This package aims to develop tools for modeling microbiome variability in disease. Initial versions focus on simulating microbiome change over time using simple Ornstein-Uhlenbeck (OU) models.

*Happy families are all alike; every unhappy family is unhappy in its own way.*
	*Leo Tolstoy*

.. toctree::
   :maxdepth: 2
   :caption: Contents:
   

Links
=================

* :ref:`genindex`
* :ref:`modindex`
* :ref:`search`
* https://qiime2.org
* https://github.com/zaneveld/karenina
* https://github.com/zaneveld/q2-karenina

Installation
=============

Karenina is in active development and is available as a direct command-line program (**karenina**), or as a Qiime2 plugin (**q2-karenina**).
Karenina is a python3.5+ program and requires **scipy**, **pandas**, **matplotlib,** and **seaborn**. 

1. Install **ffmpeg** (visualization dependency)

.. code-block:: bash
	
	sudo apt-get install ffmpeg -y

2. Install **karenina**

.. code-block:: bash

	pip install git+https://github.com/zaneveld/karenina.git

Qiime2 Users
-------------

Qiime2 users will have the ability to use their Q2 Artifacts and receive output
compatible with other Q2 plugins. **q2-karenina** requires both **ffmpeg** and **karenina**.

3. Install **q2-karenina**

.. code-block:: bash

	pip install git+https://github.com/zaneveld/q2-karenina.git

4. Update Qiime2 cache to enable newly installed plugin.

.. code-block:: bash

	qiime dev refresh-cache

Usage
=====

+------------------------------------------+-----------------------------------+
|Script                                    |Description                        |
+==========================================+===================================+
|spatial_ornstein_uhlenbeck                |OU Simulation Modeling             |
+------------------------------------------+-----------------------------------+
|fit_timeseries                            |Fit PCoA Data to OU Models         |
+------------------------------------------+-----------------------------------+
|karenina_visualization                    |Visualize PCoA Timeseries          |
+------------------------------------------+-----------------------------------+
|qiime karenina spatial-ornstein-uhlenbeck |Q2 application of OU Modeling      |
+------------------------------------------+-----------------------------------+
|qiime karenina fit-timeseries             |Q2 application of PCoA fitting     |
+------------------------------------------+-----------------------------------+
|qiime karenina visualization              |Q2 application of 3D Visualization |
+------------------------------------------+-----------------------------------+

karenina
--------

spatial_ornstein_uhlenbeck
______________________________

.. code-block:: python

	>spatial_ornstein_uhlenbeck -h
	
.. code-block:: python

	Usage: spatial_ornstein_uhlenbeck -o ./simulation_results

	This script simulates microbiome change over time using Ornstein-Uhlenbeck
	(OU) models.  These are similar to Brownian motion models, with the exception
	that they include reversion to a mean. Output is a tab-delimited data table
	and figures.

	Options:
	  --version             show program's version number and exit
	  -h, --help            show this help message and exit

	  Required options:
		-o OUTPUT, --output=OUTPUT
							the output folder for the simulation results

	  Optional options:
		--pert_file_path=PERT_FILE_PATH
							file path to a perturbation file specifying parameters
							for the simulation results
		--treatment_names=TREATMENT_NAMES
							Comma seperated list of treatment named
							[default:control,destabilizing_treatment]
		-n N_INDIVIDUALS, --n_individuals=N_INDIVIDUALS
							Comma-separated number of individuals to simulate per
							treatment.Note: This value must be enclosed in quotes.
							Example: "35,35". [default: 35,35]
		-t N_TIMEPOINTS, --n_timepoints=N_TIMEPOINTS
							Number of timepoints to simulate. (One number, which
							is the same for all treatments) [default: 10]
		-p PERTURBATION_TIMEPOINT, --perturbation_timepoint=PERTURBATION_TIMEPOINT
							Timepoint at which to apply a perturbation. Must be
							less than --n_timepoints [default: 5]
		-d PERTURBATION_DURATION, --perturbation_duration=PERTURBATION_DURATION
							Duration that the perturbation lasts. [default: 100]
		--interindividual_variation=INTERINDIVIDUAL_VARIATION
							Starting variability between individuals. [default:
							0.01]
		--delta=DELTA       Starting delta parameter for Brownian motion and
							Ornstein-Uhlenbeck processes. A higher number
							indicates more variability over time. [default: 0.25]
		-l L, --L=L         Starting lambda parameter for Ornstein-Uhlenbeck
							processes. A higher number indicates a greater
							tendancy to revert to the mean value. [default: 0.2]
		--fixed_start_pos=FIXED_START_POS
							Starting x,y,z position for all points, as comma
							separated floating point values, e.g. 0.0,0.1,0.2. If
							not supplied, starting positions will be randomized
							based on the interindividual_variation parameter
							[default: none]
		-v, --verbose      
							allows for verbose output [default: False]

The spatial_ornstein_uhlenbeck function takes in simulation parameters and develops
a distance matrix, PCoA ordination, and metadata file for use in other processes.
This tutorial will explore the functionality of the script, and provide sample input data
for fit_timeseries and karenina_visualization.

The following parameters are used to generate a simulation using Ornstein Uhlenbeck and Brownian motion models:

.. code-block:: python

	-o [Direct/filepath/to/output/dir/]
	--n_timepoints 50 
	--perturbation_timepoint 15
	--n_individuals 3,3

The following parameters were used as their default input:

.. code-block:: python

	--treatment_names control,destabilizing_treatment
	--pert_file_path os.path.abspath(resource_filename('karenina.data','set_xyz_lambda_zero.tsv'))
	--perturbation_duration 100
	--interindividual_variation 0.01
	--delta 0.25
	--L 0.20

After installing **karenina**, the following command is used to execute the simulation from within the output directory.

.. code-block:: python

	spatial_ornstein_uhlenbeck -o ./ --n_timepoints 50 --perturbation_timepoint 15 --n_individuals 3,3

This generates the following files:

* ordination.txt : Simulation PCoA data
* metadata.tsv : Simulation metadata file
* log.txt : Simulation parameters
* euclidean.txt : Euclidean distance-matrix of Simulation data
* simulation_video.mp4 : Visualization of simulated data

These files can be viewed here:

https://github.com/zaneveld/karenina/tree/master/data/outputs/OU_simulation_50.3.3

.. raw:: html

	<div style="position:relative;height:0;padding-bottom:57.02%"><iframe src="https://www.youtube.com/embed/CIR-5lGLBOc?ecver=2" style="position:absolute;width:100%;height:100%;left:0" width="631" height="360" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe></div>

fit_timeseries
__________________

.. code-block:: python

	>fit_timeseries -h
	
.. code-block:: python

	Usage: fit_timeseries -o ./simulation_results

	This script fits microbiome change over time to Ornstein-Uhlenbeck (OU)
	models.Demo fitting an OU model using default parameters.

	Options:
	  --version             show program's version number and exit
	  -h, --help            show this help message and exit

	  Required options:
		-o OUTPUT, --output=OUTPUT
							the output folder for the simulation results

	  Optional options:
		--fit_method=FIT_METHOD
							Global optimization_method to use
							[default:basinhopping]
		--pcoa_qza=PCOA_QZA
							The input PCoA qza file
		--metadata=METADATA
							The input metadata tsv file, if not defined, metadata
							will be extracted from PCoA qza
		--individual=INDIVIDUAL
							The host subject ID column identifier, separate by
							comma to combine TWO columns
		--timepoint=TIMEPOINT
							The timepoint column identifier
		--treatment=TREATMENT
							The treatment column identifier
		-v, --verbose       
							allows for verbose output [default: False]

The fit_timeseries process allows users to fit PCoA and Metadata information to 
Ornstein Uhlenbeck models. 

.. warning ::

	This script does not allow for optimization of single-point observations, where individuals are only measured or treated at one specific timepoint. If subjects are applied treatments at a single timepoint, it may be necessary to manually modify the metadata file to apply a boolean label to "treatment x applied" or not. 
	
.. note ::
	
	The optimal number of measured timepoints is roughly 50 per subject, based on benchmarking.

.. image :: https://github.com/SLPeoples/karenina/blob/master/data/outputs/benchmarking/benchmark_lambda_err.png?raw=true
	:alt: Benchmark Lambda Error
	:align: center
	
.. image :: https://github.com/SLPeoples/karenina/blob/master/data/outputs/benchmarking/benchmark_sigma_err.png?raw=true
	:alt: Benchmark Sigma Error
	:align: center
	
.. image :: https://github.com/SLPeoples/karenina/blob/master/data/outputs/benchmarking/benchmark_theta_err.png?raw=true
	:alt: Benchmark Theta Error
	:align: center
	
Using the data from the previously ran simulation (see spatial_ornstein_uhlenbeck), the fit_timeseries process
will attempt to fit Ornstein Uhlenbeck models to the individuals and treatment cohorts of the input data.

The data being used for this tutorial can be found here:

https://github.com/zaneveld/karenina/blob/master/data/fit_timeseries/simulation.qza?raw=true

.. note::

	fit_timeseries is currently configured to utilize **basinhopping** as its global optimizer, and more optimization methods will be added in the future.
	
	fit_timeseries is currently configured to only accept Qiime2 formatted data, but will accept direct PCoA and metadata files in the future.

The following parameters are defined to fit the PCoA data to OU models:

.. code-block:: python

	-o [Direct/filepath/to/output/dir/]
	--individual Subject
	--timepoint Timepoint
	--treatment Treatment

After installing **karenina** the following command may be used to generate OU model parameter output from within the same directory as *simulation.qza*. The output folder in this instance is */simulation_fit_ts*.

.. code-block:: python

	fit_timeseries -o ./simulation_fit_ts/ \
	--pcoa_qza ./simulation.qza \
	--individual Subject \
	--timepoint Timepoint \
	--treatment Treatment

.. note::
	
	fit_timeseries will create and optimize models for *n_timepoints* and *n_individuals*, 
	and thus takes quite some time on larger datasets. Because this simulation data requires
	optimization of over 7000 entries, we have provided the data below.
	
With the *treatment* column identified, the program will generate two output files containing metadata for individuals and cohorts. Below is a sample of the cohort output generated. With input parameters being optimized to sigma/ delta: 0.25, lambda: 0.20, theta/ mu: 0.00 (from the OU simulation), the fit_timeseries process estimates the Ornstein Uhlenbeck
model parameters.

This data can be found at the following link:

https://github.com/zaneveld/karenina/tree/master/data/outputs/fit_timeseries/tx_defined

Below is a sample of the cohort output generated, which estimates the control cohort to have parameters approaching
the input. The perturbation set *lambda* to zero, and the estimation clearly displays the parameter approaching zero in
the destabilizing_treatment cohort.

+----------------------------+---+-------+-------+-------+-------+-------+
|Subject                     |pc |sigma  |lambda |theta  |nLogLik|aic    |
+============================+===+=======+=======+=======+=======+=======+
|control_pc1                 |pc1|0.25387|0.23143|-0.0109|-190.49|-4.4992|
+----------------------------+---+-------+-------+-------+-------+-------+
|control_pc2                 |pc2|0.25388|0.23144|-0.0109|-190.49|-4.4992|
+----------------------------+---+-------+-------+-------+-------+-------+
|control_pc3                 |pc3|0.25388|0.23144|-0.0109|-190.49|-4.4992|
+----------------------------+---+-------+-------+-------+-------+-------+
|destabilizing_treatment_pc1 |pc1|0.24395|0.01951|-0.1203|-201.98|-4.6163|
+----------------------------+---+-------+-------+-------+-------+-------+
|destabilizing_treatment_pc2 |pc2|0.24395|0.01951|-0.1203|-201.98|-4.6163|
+----------------------------+---+-------+-------+-------+-------+-------+
|destabilizing_treatment_pc3 |pc3|0.24395|0.01951|-0.1203|-201.98|-4.6163|
+----------------------------+---+-------+-------+-------+-------+-------+

Because the simulation data is large, and thus takes some time to process, we can alternatively fit 
the timeseries from **Moving Pictures**. The weighted_unifrac_pcoa_results.qza file will be used.

The PCoA data can be found here:

https://github.com/zaneveld/karenina/karenina/blob/master/data/fit_timeseries/weighted_unifrac_pcoa_results.qza?raw=true

Because the Moving Pictures data contains single-point observations for their treatments, being that their
treatments are applied at timepoint-0 only, fit_timeseries will fit OU models to only individuals if we do not define
a treatment identifier.

After installing **karenina** the following command can be ran from the same directory as *weighted_unifrac_pcoa_results.qza*.

.. note::

	The individual column combines the columns **Subject** and **BodySite**, this is entered as a comma-separated list.
	
.. note::

	The treatments are single-point observations, so fit_timeseries will fit to only individuals if *treatment-col* is **None**.

.. code-block:: python

	fit_timeseries \
	-o ./moving_pictures_fit_ts/ 
	--pcoa_qza ./weighted_unifrac_pcoa_results.qza 
	--individual Subject,BodySite 
	--timepoint DaysSinceExperimentStart

The output data from this execution can be found here:

https://github.com/zaneveld/karenina/blob/master/data/outputs/fit_timeseries/tx_undefined

+----------------------------+---+-------+-------+-------+-------+-------+
|Subject_BodySite            |pc |sigma  |lambda |theta  |nLogLik|aic    |
+============================+===+=======+=======+=======+=======+=======+
|subject-1_gut               |pc1|0.41463|0.00360|-0.5421|-30.398|1.17122|
+----------------------------+---+-------+-------+-------+-------+-------+
|subject-1_gut               |pc2|-0.4051|0.03268|0.02503|-30.398|1.17122|
+----------------------------+---+-------+-------+-------+-------+-------+
|subject-1_gut               |pc3|0.42444|0.04177|-0.0019|-30.398|1.17122|
+----------------------------+---+-------+-------+-------+-------+-------+
|subject-1_left-palm         |pc1|-0.4043|0.02676|0.18309|-30.398|1.17122|
+----------------------------+---+-------+-------+-------+-------+-------+
|subject-1_left-palm         |pc2|-0.4021|-0.0245|-0.2053|-30.398|1.17122|
+----------------------------+---+-------+-------+-------+-------+-------+
|subject-1_left-palm         |pc3|0.39130|-0.0246|0.28571|-30.398|1.17122|
+----------------------------+---+-------+-------+-------+-------+-------+
|subject-1_right-palm        |pc1|-0.4045|0.03113|0.15796|-30.398|1.17122|
+----------------------------+---+-------+-------+-------+-------+-------+
|subject-1_right-palm        |pc2|0.41556|0.00018|-2.5981|-30.398|1.17122|
+----------------------------+---+-------+-------+-------+-------+-------+
|subject-1_right-palm        |pc3|0.41527|-0.2349|0.13882|-30.398|1.17122|
+----------------------------+---+-------+-------+-------+-------+-------+
|subject-1_tongue            |pc1|-0.8731|0.04062|0.27590|-27.550|3.36793|
+----------------------------+---+-------+-------+-------+-------+-------+
|subject-1_tongue            |pc2|-0.8970|0.00520|0.29044|-24.257|3.62250|
+----------------------------+---+-------+-------+-------+-------+-------+
|subject-1_tongue            |pc3|-0.8792|0.03174|-0.0404|-26.767|3.42560|
+----------------------------+---+-------+-------+-------+-------+-------+
|subject-2_gut               |pc1|0.40325|-0.0210|-0.5796|-30.398|1.17122|
+----------------------------+---+-------+-------+-------+-------+-------+
|subject-2_gut               |pc2|-0.4024|0.00664|0.01683|-30.398|1.17122|
+----------------------------+---+-------+-------+-------+-------+-------+
|subject-2_gut               |pc3|-0.4132|0.01286|0.00126|-30.398|1.17122|
+----------------------------+---+-------+-------+-------+-------+-------+
|subject-2_left-palm         |pc1|0.39737|0.01596|0.18911|-30.398|1.17122|
+----------------------------+---+-------+-------+-------+-------+-------+
|subject-2_left-palm         |pc2|0.41552|0.03488|0.04242|-30.398|1.17122|
+----------------------------+---+-------+-------+-------+-------+-------+
|subject-2_left-palm         |pc3|-0.4025|-0.0174|0.09704|-30.398|1.17122|
+----------------------------+---+-------+-------+-------+-------+-------+
|subject-2_right-palm        |pc1|-0.4023|0.00992|0.33786|-30.398|1.17122|
+----------------------------+---+-------+-------+-------+-------+-------+
|subject-2_right-palm        |pc2|-0.4132|0.04034|-0.0563|-30.398|1.17122|
+----------------------------+---+-------+-------+-------+-------+-------+
|subject-2_right-palm        |pc3|0.41496|0.00458|-0.0590|-30.398|1.17122|
+----------------------------+---+-------+-------+-------+-------+-------+
|subject-2_tongue            |pc1|-0.4038|0.46210|0.29795|-30.398|1.17122|
+----------------------------+---+-------+-------+-------+-------+-------+
|subject-2_tongue            |pc2|-0.4145|0.33915|0.21338|-30.398|1.17122|
+----------------------------+---+-------+-------+-------+-------+-------+
|subject-2_tongue            |pc3|0.41374|-0.1617|0.07803|-30.398|1.17122|
+----------------------------+---+-------+-------+-------+-------+-------+


karenina_visualization
__________________________

.. warning::

	This function is currently experiencing some bugs, and is not recommended for use at this time.
	Visualizations can be generated through execution of **spatial_ornstein_uhlenbeck**, and is currently
	being addressed.
	
.. code-block:: python

	>karenina_visualization -h
	
.. code-block:: python

	Usage: karenina_visualization -o ./simulation_results

	This script fits microbiome change over time to Ornstein-Uhlenbeck (OU)
	models.Demo fitting an OU model using default parameters.

	Options:
	  --version             show program's version number and exit
	  -h, --help            show this help message and exit

	  Required options:
		-o OUTPUT, --output=OUTPUT
							the output folder for the simulation results

	  Optional options:
		--pcoa_qza=PCOA_QZA
							The input PCoA qza file
		--metadata=METADATA
							The input metadata tsv file, if not defined, metadata
							will be extracted from PCoA qza
		--individual=INDIVIDUAL
							The host subject ID column identifier, separate by
							comma to combine TWO columns
		--timepoint=TIMEPOINT
							The timepoint column identifier
		--treatment=TREATMENT
							The treatment column identifier
		-v, --verbose        
							allows for verbose output [default: False]

The karenina_visualization function allows users to visualize their PCoA results as an mp4 movie.

Using the data from the previously ran simulation (see spatial_ornstein_uhlenbeck), the karenina_visualization
program will visualize the PCoA Results, and return an mp4 movie called *simulation_video.mp4*.

The data being used for this tutorial can be found here:

https://github.com/zaneveld/karenina/blob/master/data/fit_timeseries/simulation.qza?raw=true

The following parameters are defined to visualize the PCoA data:

.. code-block:: python

	-o [Direct/filepath/to/output/dir/]
	--individual Subject
	--timepoint Timepoint
	--treatment Treatment

After installing **karenina** the following command may be used to generate a 3d visualization video from within the same directory as *simulation.qza*. The output folder in this instance is */simulation_vis*.

.. code-block:: python

	karenina_visualization -o ./simulation_vis/ \
	--pcoa_qza ./simulation.qza \
	--individual Subject \
	--timepoint Timepoint \
	--treatment Treatment

The output video can be viewed below, and the file can be found here:

https://github.com/zaneveld/karenina/tree/master/data/outputs/visualization

.. raw:: html

	<div style="position:relative;height:0;padding-bottom:75%"><iframe src="https://www.youtube.com/embed/qxuL0E-0E5M?ecver=2" style="position:absolute;width:100%;height:100%;left:0" width="480" height="360" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe></div>

q2-karenina
------------

.. code-block:: python

	>qiime karenina --help
	
.. code-block:: python

	Usage: qiime karenina [OPTIONS] COMMAND [ARGS]...

	Description: This script simulates microbiome change over time using
	Ornstein-Uhlenbeck (OU) models.  These are similar to Brownian motion
	models, with the exception that they include reversion to a mean. Output
	is a tab-delimited data table and figures.

	Plugin website: https://github.com/zaneveld/karenina

	Getting user support: Please post to the QIIME 2 forum for help with this
	plugin: https://forum.qiime2.org

	Options:
		--version    Show the version and exit.
		--citations  Show citations and exit.
		--help       Show this message and exit.

	Commands:
	fit-timeseries              Fit OU Models to PCoA Ordination output
	spatial-ornstein-uhlenbeck  Spatial Ornstein Uhlenbeck microbial community
								simulation
	visualization               Generates 3D animations of PCoA Timeseries

qiime karenina spatial-ornstein-uhlenbeck
___________________________________________

.. warning::

	This method is currently under construction and will be available for use in Qiime2 in the near future.
	to implement this method, please reference karenina spatial_ornstein_uhlenbeck.

.. code-block:: python

	>qiime karenina spatial-ornstein-uhlenbeck --help
	
.. code-block:: python

	Usage: qiime karenina spatial-ornstein-uhlenbeck [OPTIONS]

	This method simulates microbial behavior over time usingOrnstein Uhlenbeck
	models. This are similar to Brownian Motionwith the exception that they
	include reversion to a mean.

	Options:
		--p-perturbation-fp TEXT        
									filepath for perturbation parameters for
									simulation results  [required]
		--p-treatment-names TEXT        
									['control,destabilizing_treatment'] Names
									for simulation treatments  [required]
		--p-n-individuals TEXT      
									['35,35'] Number of individuals per
									treatment  [required]
		--p-n-timepoints INTEGER    
									['10'] Number of simulation timepoints
									[required]
		--p-perturbation-timepoint INTEGER
									['5'] Timepoint at which to apply treatment
									(<n_timepoints)  [required]
		--p-perturbation-duration INTEGER
									['100'] Duration of perturbation.
									[required]
		--p-interindividual-variation FLOAT
									['0.01']Starting variability between
									individuals  [required]
		--p-delta FLOAT                 
									['0.25'] Starting Delta parameter for
									Brownian Motion/ OU models. Higher values
									indicate greater variability over time
									[required]
		--p-lam FLOAT               
									['0.20'] Starting Lambda value for OU
									process. Higher values indicate a greater
									tendancy to revert to the mean value.
									[required]
		--p-fixed-start-pos TEXT 
									Starting x,y,z position for each point. If
									not defined, starting positions will be
									randomized based on
									interindividual_variation; type: string, eg:
									['0.0,0.1,0.2'].  [required]
		--o-ordination ARTIFACT PATH PCoAResults
									Sample PCoA file containing simulation data
									[required if not passing --output-dir]
		--o-distance-matrix ARTIFACT PATH DistanceMatrix
									Sample Distance Matrix containing simulation
									data  [required if not passing --output-dir]
		--output-dir DIRECTORY    
									Output unspecified results to a directory
		--cmd-config PATH   
									Use config file for command options
		--verbose           
									Display verbose output to stdout and/or
									stderr during execution of this action.
									[default: False]
		--quiet             
									Silence output if execution is successful
									(silence is golden).  [default: False]
		--citations         
									Show citations and exit.
		--help              
									Show this message and exit.

.. note::

	The tutorial for this Q2 Method is being created and will be available in the future.

qiime karenina fit-timeseries
______________________________

.. note::

	This visualization currently does not accept Qiime2 artifacts, and is currently being addressed. Please note that the input is the **filepath** to the PCoA Results qza file.

.. code-block:: python

	>qiime karenina fit-timeseries --help
	
.. code-block:: python

	Usage: qiime karenina fit-timeseries [OPTIONS]

	This visualizer generates OU model parameters for PCoA outputdata, for
	each individual and each defined treatment cohort.

	Options:
		--p-pcoa TEXT                   
									filepath to PCoA results  [required]
		--p-metadata TEXT           
									filepath to Sample metadata  [required]
		--p-method [basinhopping] 
									global optimization method  [required]
		--p-individual-col TEXT 
									individual column identifier  [required]
		--p-timepoint-col TEXT 
									timepoint column identifier  [required]
		--p-treatment-col TEXT 
									treatment column identifier  [required]
		--o-visualization VISUALIZATION PATH
									[required if not passing --output-dir]
		--output-dir DIRECTORY
									Output unspecified results to a directory
		--cmd-config PATH    
									Use config file for command options
		--verbose           
									Display verbose output to stdout and/or
									stderr during execution of this action.
									[default: False]
		--quiet             
									Silence output if execution is successful
									(silence is golden).  [default: False]
		--citations         
									Show citations and exit.
		--help              
									Show this message and exit.

The visualization allows for the use of Qiime 2 to fit Ornstein Uhlenbeck models
to PCoA data. Utilizing previous simulation data which can be found at the following link,
we will walk through the use of this plugin.

.. warning ::

	This script does not allow for optimization of single-point observations, where individuals are only measured or treated at one specific timepoint. If subjects are applied treatments at a single timepoint, it may be necessary to manually modify the metadata file to apply a boolean label to "treatment x applied" or not. 
	
.. note ::
	
	The optimal number of measured timepoints is roughly 50 per subject, based on benchmarking.

.. image :: https://github.com/SLPeoples/karenina/blob/master/data/outputs/benchmarking/benchmark_lambda_err.png?raw=true
	:alt: Benchmark Lambda Error
	:align: center
	
.. image :: https://github.com/SLPeoples/karenina/blob/master/data/outputs/benchmarking/benchmark_sigma_err.png?raw=true
	:alt: Benchmark Sigma Error
	:align: center
	
.. image :: https://github.com/SLPeoples/karenina/blob/master/data/outputs/benchmarking/benchmark_theta_err.png?raw=true
	:alt: Benchmark Theta Error
	:align: center

The data being used for this tutorial can be found here:

https://github.com/zaneveld/karenina/blob/master/data/fit_timeseries/simulation.qza?raw=true

The following parameters are defined to fit the PCoA data to OU models:

Notice the metadata is within the qza file, so the metadata parameter is defined as *None*
	
.. code-block:: python

	--p-pcoa [Direct/filepath/to/pcoaResults.qza]
	--p-metadata None
	
.. note::

	The only optimization method employed at this time is basinhopping
	
.. code-block:: python

	--p-method basinhopping
	
Within the metadata file, we see that the column identifying individuals, timepoints, and treatment are *Subject, Timepoint, Treatment*.
	
We define the following parameters to match these identifiers
	
.. code-block:: python

	--p-individual-col Subject
	--p-timepoint-col Timepoint
	--p-treatment-col Treatment
	
The output directory is defined as such:

.. code-block:: python

	--output-dir /home/qiime2/simulation_ou_fit_ts/

After installing **q2-karenina** the following command may be used to generate OU model parameter output from within the same directory as *simulation.qza*.

.. code-block:: python

	qiime karenina fit-timeseries \
	--p-pcoa ./simulation.qza \
	--p-metadata None \
	--p-method basinhopping \
	--p-individual-col Subject \
	--p-timepoint-col Timepoint \
	--p-treatment-col Treatment \
	--output-dir /home/qiime2/simulation_ou_fit_ts/
	
A successful visualization provides the following output:

.. code-block:: python

	Saved Visualization to: /home/qiime2/simulation_ou_fit_ts/visualization.qzv
	
Within the visualization.qzv, we have two output data files which contain our modeled timeseries results. With input parameters being optimized to sigma/ delta: 0.25, lambda: 0.20, theta/ mu: 0.00 (from the OU simulation), the fit_timeseries modeled individuals and cohorts, which can be found here:

https://github.com/zaneveld/q2-karenina/blob/master/data/simulation_ou_fit_ts

Below is a sample of the cohort output generated, which estimates the control cohort to have parameters approaching
the input. The perturbation set *lambda* to zero, and the estimation clearly displays the parameter approaching zero in
the destabilizing_treatment cohort.

+----------------------------+---+-------+-------+-------+-------+-------+
|Subject                     |pc |sigma  |lambda |theta  |nLogLik|aic    |
+============================+===+=======+=======+=======+=======+=======+
|control_pc1                 |pc1|0.25387|0.23143|-0.0109|-190.49|-4.4992|
+----------------------------+---+-------+-------+-------+-------+-------+
|control_pc2                 |pc2|0.25388|0.23144|-0.0109|-190.49|-4.4992|
+----------------------------+---+-------+-------+-------+-------+-------+
|control_pc3                 |pc3|0.25388|0.23144|-0.0109|-190.49|-4.4992|
+----------------------------+---+-------+-------+-------+-------+-------+
|destabilizing_treatment_pc1 |pc1|0.24395|0.01951|-0.1203|-201.98|-4.6163|
+----------------------------+---+-------+-------+-------+-------+-------+
|destabilizing_treatment_pc2 |pc2|0.24395|0.01951|-0.1203|-201.98|-4.6163|
+----------------------------+---+-------+-------+-------+-------+-------+
|destabilizing_treatment_pc3 |pc3|0.24395|0.01951|-0.1203|-201.98|-4.6163|
+----------------------------+---+-------+-------+-------+-------+-------+

Because the simulation data is large, and thus takes some time to process, we can alternatively
fit the timeseries from **Moving Pictures**. The weighted_unifract_pcoa_results.qza file will be used.

The PCoA data can be found here:

https://github.com/zaneveld/karenina/blob/master/data/fit_timeseries/weighted_unifrac_pcoa_results.qza?raw=true

Because the Moving Pictures data contains single-point observations for their treatments, being that their treatments are applied at timepoint-0 only, fit_timeseries will fit OU models to only individuals if we do not define a treatment identifier.

After installing **q2-karenina** the following command can be ran from the same directory as *weighted_unifrac_pcoa_results.qza*.

.. note::

	The individual column combines the columns **Subject** and **BodySite**, this is entered as a comma-separated list.
	
.. note::

	The treatments are single-point observations, so fit_timeseries will fit to only individuals if *treatment-col* is **None**.

.. code-block:: python

	qiime karenina fit-timeseries \
	--p-pcoa ./weighted_unifrac_pcoa_results.qza \
	--p-metadata None \
	--p-method basinhopping \
	--p-individual-col Subject,BodySite \
	--p-timepoint-col DaysSinceExperimentStart \
	--p-treatment-col None \
	--output-dir ./moving_pictures_fit_ts/

A successful visualization provides the following output:

.. code-block:: python

	Saved Visualization to: ./moving_pictures_fit_ts/visualization.qzv
	
The output data from this execution can be found here:

https://github.com/zaneveld/q2-karenina/blob/master/data/moving_pictures_fit_ts

+----------------------------+---+-------+-------+-------+-------+-------+
|Subject_BodySite            |pc |sigma  |lambda |theta  |nLogLik|aic    |
+============================+===+=======+=======+=======+=======+=======+
|subject-1_gut               |pc1|0.41463|0.00360|-0.5421|-30.398|1.17122|
+----------------------------+---+-------+-------+-------+-------+-------+
|subject-1_gut               |pc2|-0.4051|0.03268|0.02503|-30.398|1.17122|
+----------------------------+---+-------+-------+-------+-------+-------+
|subject-1_gut               |pc3|0.42444|0.04177|-0.0019|-30.398|1.17122|
+----------------------------+---+-------+-------+-------+-------+-------+
|subject-1_left-palm         |pc1|-0.4043|0.02676|0.18309|-30.398|1.17122|
+----------------------------+---+-------+-------+-------+-------+-------+
|subject-1_left-palm         |pc2|-0.4021|-0.0245|-0.2053|-30.398|1.17122|
+----------------------------+---+-------+-------+-------+-------+-------+
|subject-1_left-palm         |pc3|0.39130|-0.0246|0.28571|-30.398|1.17122|
+----------------------------+---+-------+-------+-------+-------+-------+
|subject-1_right-palm        |pc1|-0.4045|0.03113|0.15796|-30.398|1.17122|
+----------------------------+---+-------+-------+-------+-------+-------+
|subject-1_right-palm        |pc2|0.41556|0.00018|-2.5981|-30.398|1.17122|
+----------------------------+---+-------+-------+-------+-------+-------+
|subject-1_right-palm        |pc3|0.41527|-0.2349|0.13882|-30.398|1.17122|
+----------------------------+---+-------+-------+-------+-------+-------+
|subject-1_tongue            |pc1|-0.8731|0.04062|0.27590|-27.550|3.36793|
+----------------------------+---+-------+-------+-------+-------+-------+
|subject-1_tongue            |pc2|-0.8970|0.00520|0.29044|-24.257|3.62250|
+----------------------------+---+-------+-------+-------+-------+-------+
|subject-1_tongue            |pc3|-0.8792|0.03174|-0.0404|-26.767|3.42560|
+----------------------------+---+-------+-------+-------+-------+-------+
|subject-2_gut               |pc1|0.40325|-0.0210|-0.5796|-30.398|1.17122|
+----------------------------+---+-------+-------+-------+-------+-------+
|subject-2_gut               |pc2|-0.4024|0.00664|0.01683|-30.398|1.17122|
+----------------------------+---+-------+-------+-------+-------+-------+
|subject-2_gut               |pc3|-0.4132|0.01286|0.00126|-30.398|1.17122|
+----------------------------+---+-------+-------+-------+-------+-------+
|subject-2_left-palm         |pc1|0.39737|0.01596|0.18911|-30.398|1.17122|
+----------------------------+---+-------+-------+-------+-------+-------+
|subject-2_left-palm         |pc2|0.41552|0.03488|0.04242|-30.398|1.17122|
+----------------------------+---+-------+-------+-------+-------+-------+
|subject-2_left-palm         |pc3|-0.4025|-0.0174|0.09704|-30.398|1.17122|
+----------------------------+---+-------+-------+-------+-------+-------+
|subject-2_right-palm        |pc1|-0.4023|0.00992|0.33786|-30.398|1.17122|
+----------------------------+---+-------+-------+-------+-------+-------+
|subject-2_right-palm        |pc2|-0.4132|0.04034|-0.0563|-30.398|1.17122|
+----------------------------+---+-------+-------+-------+-------+-------+
|subject-2_right-palm        |pc3|0.41496|0.00458|-0.0590|-30.398|1.17122|
+----------------------------+---+-------+-------+-------+-------+-------+
|subject-2_tongue            |pc1|-0.4038|0.46210|0.29795|-30.398|1.17122|
+----------------------------+---+-------+-------+-------+-------+-------+
|subject-2_tongue            |pc2|-0.4145|0.33915|0.21338|-30.398|1.17122|
+----------------------------+---+-------+-------+-------+-------+-------+
|subject-2_tongue            |pc3|0.41374|-0.1617|0.07803|-30.398|1.17122|
+----------------------------+---+-------+-------+-------+-------+-------+
	
qiime karenina visualization
_____________________________

.. warning::

	This visualization is currently under construction and will be available for use in Qiime2 in the near future.
	to implement this method, please reference karenina_visualization.

.. code-block:: python

	>qiime karenina visualization --help
	
.. code-block:: python

	Usage: qiime karenina visualization [OPTIONS]

	This visualizer generates 3D animations of PCoA Timeseries.

	Options:
		--p-pcoa TEXT                  
									filepath to PCoA results  [required]
		--p-metadata TEXT   
									filepath to Sample metadata  [required]
		--p-individual-col TEXT 
									individual column identifier  [required]
		--p-timepoint-col TEXT 
									timepoint column identifier  [required]
		--p-treatment-col TEXT 
									treatment column identifier  [required]
		--o-visualization VISUALIZATION PATH
									[required if not passing --output-dir]
		--output-dir DIRECTORY
									Output unspecified results to a directory
		--cmd-config PATH    
									Use config file for command options
		--verbose           
									Display verbose output to stdout and/or
									stderr during execution of this action.
									[default: False]
		--quiet             
									Silence output if execution is successful
									(silence is golden).  [default: False]
		--citations         
									Show citations and exit.
		--help              
									Show this message and exit.

.. note::

	The tutorial for this Q2 Visualization is being created and will be available in the future.

spatial_ornstein_uhlenbeck.py
=============================

.. automodule:: karenina.spatial_ornstein_uhlenbeck
	:exclude-members: main, make_option_parser
	:members:
	:undoc-members:
	:show-inheritance:
	:private-members:

fit_timeseries.py
==================

.. automodule:: karenina.fit_timeseries
	:exclude-members: main, make_option_parser
	:members:
	:undoc-members:
	:show-inheritance:
	:private-members:

fit_timeseries_benchmark.py
===========================

.. automodule:: karenina.fit_timeseries_benchmark
	:exclude-members: main, make_option_parser
	:members:
	:undoc-members:
	:show-inheritance:
	:private-members:

visualization.py
==================

.. automodule:: karenina.visualization
	:members:
	:exclude-members: main, make_option_parser
	:undoc-members:
	:show-inheritance:
	:private-members:

experiment.py
==================

.. automodule:: karenina.experiment
	:members:
	:undoc-members:
	:show-inheritance:
	:private-members:

individual.py
==================

.. automodule:: karenina.individual
	:members:
	:undoc-members:
	:show-inheritance:
	:private-members:

perturbation.py
==================

.. automodule:: karenina.perturbation
	:members:
	:undoc-members:
	:show-inheritance:
	:private-members:

process.py
==================

.. automodule:: karenina.process
	:members:
	:undoc-members:
	:show-inheritance:
	:private-members: